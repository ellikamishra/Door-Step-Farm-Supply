[{"/home/ellika/farm/client/src/signup.js":"1","/home/ellika/farm/client/src/Cart/Card.js":"2","/home/ellika/farm/client/src/login.js":"3","/home/ellika/farm/client/src/Cart/Sizes.js":"4","/home/ellika/farm/client/src/App.js":"5","/home/ellika/farm/client/src/order.js":"6"},{"size":5446,"mtime":1607514839506,"results":"7","hashOfConfig":"8"},{"size":480,"mtime":1607670960476,"results":"9","hashOfConfig":"8"},{"size":2692,"mtime":1607427196749,"results":"10","hashOfConfig":"8"},{"size":830,"mtime":1607704677299,"results":"11","hashOfConfig":"8"},{"size":2391,"mtime":1607706368142,"results":"12","hashOfConfig":"8"},{"size":47826,"mtime":1607710699723,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l345n0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ellika/farm/client/src/signup.js",["28","29","30","31"],"/home/ellika/farm/client/src/Cart/Card.js",[],"/home/ellika/farm/client/src/login.js",["32","33","34","35","36","37","38","39","40","41","42"],"import \"./App.css\";\nimport { React,useEffect,useState } from \"react\";\nimport Axios from \"axios\";\nimport {\n    Container, Col, Form,\n    FormGroup, Label, Input,\n    Button, FormText, FormFeedback,\n  } from 'reactstrap';\n  import './App.css';\n  import Table from 'react-bootstrap/Table';\nimport { Router, useHistory,Route,Link, useLocation,Redirect} from \"react-router-dom\";\n//import Cart from \"./cart\";\n\nfunction Login(){\n\n    const [name,setName] = useState(\"\");\n    const [password,setPassword]=useState(\"\");\n    const [role,setRole]=useState(\"\");\n    // const history=useHistory();\n    // const loc=useLocation();\n    const [loginstatus,setStatus]=useState(0);\n    const login=()=>{\n        Axios.post(\"http://localhost:3001/api/login\",{\n        name:name,\n        pswd:password,\n        role:role\n\n        }).then((response)=>{\n            if(response.data.message){\n                setStatus(response.data.message)\n            }\n            else{\n              \n                setStatus(1);\n                 let id=parseInt(response.data[0].id)\n                alert(\"Successful login as \"+response.data[0].name+\",User Id-\"+id);\n                console.log(response);\n                \n             \n                \n            }\n            \n            \n        });\n\n    };\n    // useEffect(()=>{\n    //   if(loginstatus)\n    //  { return <Cart/>}\n    // })\n   if(loginstatus)\n   {\n    \n    return <Redirect to='/cart'/>;\n   \n  }\n   return(\n\n    <Container>\n<Form className=\"form\">\n        <Col>\n            <FormGroup>\n              <Label for=\"exampleName\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"exampleName\"\n                placeholder=\"Name\"\n                value={ name }               \n                onChange={ (e) => {\n                  {setName(e.target.value)  } \n                  \n                }\n                }/></FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"********\"\n                value={ password }\n                onChange={ (e)=>\n                  setPassword(e.target.value) }\n            />\n            </FormGroup>\n          </Col>\n          \n          <Button onClick={login}>LOGIN</Button>\n          </Form>\n\n       {/* <Link to=\"/cart\">\n       <h1>{loginstatus}</h1>\n     </Link> */}\n        \n        {/* <Router>\n        <Route path=\"/cart\" exact render={() => <Cart/>}/>\n        </Router> */}\n    </Container>\n\n\n\n   );\n\n}\n\nexport default Login;",["43","44"],"/home/ellika/farm/client/src/Cart/Sizes.js",[],"/home/ellika/farm/client/src/App.js",["45","46"],"/home/ellika/farm/client/src/order.js",["47"],{"ruleId":"48","severity":1,"message":"49","line":7,"column":13,"nodeType":"50","messageId":"51","endLine":7,"endColumn":21},{"ruleId":"48","severity":1,"message":"52","line":7,"column":23,"nodeType":"50","messageId":"51","endLine":7,"endColumn":35},{"ruleId":"48","severity":1,"message":"53","line":11,"column":9,"nodeType":"50","messageId":"51","endLine":11,"endColumn":16},{"ruleId":"48","severity":1,"message":"54","line":14,"column":10,"nodeType":"50","messageId":"51","endLine":14,"endColumn":19},{"ruleId":"48","severity":1,"message":"55","line":2,"column":16,"nodeType":"50","messageId":"51","endLine":2,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":7,"column":13,"nodeType":"50","messageId":"51","endLine":7,"endColumn":21},{"ruleId":"48","severity":1,"message":"52","line":7,"column":23,"nodeType":"50","messageId":"51","endLine":7,"endColumn":35},{"ruleId":"48","severity":1,"message":"56","line":10,"column":10,"nodeType":"50","messageId":"51","endLine":10,"endColumn":15},{"ruleId":"48","severity":1,"message":"57","line":11,"column":10,"nodeType":"50","messageId":"51","endLine":11,"endColumn":16},{"ruleId":"48","severity":1,"message":"58","line":11,"column":18,"nodeType":"50","messageId":"51","endLine":11,"endColumn":28},{"ruleId":"48","severity":1,"message":"59","line":11,"column":29,"nodeType":"50","messageId":"51","endLine":11,"endColumn":34},{"ruleId":"48","severity":1,"message":"60","line":11,"column":35,"nodeType":"50","messageId":"51","endLine":11,"endColumn":39},{"ruleId":"48","severity":1,"message":"61","line":11,"column":41,"nodeType":"50","messageId":"51","endLine":11,"endColumn":52},{"ruleId":"48","severity":1,"message":"62","line":18,"column":17,"nodeType":"50","messageId":"51","endLine":18,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":71,"column":19,"nodeType":"65","messageId":"66","endLine":71,"endColumn":46},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"48","severity":1,"message":"71","line":16,"column":35,"nodeType":"50","messageId":"51","endLine":16,"endColumn":43},{"ruleId":"48","severity":1,"message":"72","line":17,"column":8,"nodeType":"50","messageId":"51","endLine":17,"endColumn":14},{"ruleId":"48","severity":1,"message":"73","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":17},"no-unused-vars","'FormText' is defined but never used.","Identifier","unusedVar","'FormFeedback' is defined but never used.","'useForm' is defined but never used.","'allLetter' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","'Router' is defined but never used.","'useHistory' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'setRole' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"'Redirect' is defined but never used.","'Button' is defined but never used.","'CardGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]